# 4.3. Считаем до 20: используйте цикл for для вывода чисел от 1 до 20 включительно.
# 4.4. Миллион: создайте список чисел от 1 до 1 000 000, затем воспользуйтесь циклом for для 
# вывода чисел. (Если вывод занимает слишком много времени, остановите его нажатием 
# Ctrl+C или закройте окно вывода.)
# 4.5. Суммирование миллиона чисел: создайте список чисел от 1 до 1 000 000, затем воcпользуйтесь функциями min() и max() и убедитесь в том, что список действительно начинается 
# с 1 и заканчивается 1 000 000. Вызовите функцию sum() и посмотрите, насколько 
# быстро Python сможет просуммировать миллион чисел.
# 4.6. Нечетные числа: воспользуйтесь третьим аргументом функции range() для создания 
# списка нечетных чисел от 1 до 20. Выведите все числа в цикле for.
# 4.7. Тройки: создайте список чисел, кратных 3, в диапазоне от 3 до 30. Выведите все числа 
# своего списка в цикле for.
# 4.8. Кубы: результат возведения числа в третью степень называется кубом. Например, 
# куб 2 записывается в языке Python в виде 2**3. Создайте список первых 10 кубов (то есть 
# кубов всех целых чисел от 1 до 10) и выведите значения всех кубов в цикле for.
# 4.9. Генератор кубов: используйте конструкцию генератора списка для создания списка 
# первых 10 кубов.

three = [i for i in range(1,21)]
# print(*three, sep=" ")

four = [i for i in range(1,1000001)]
# for i in four:
#     print(i)
    
five = four
# print(f'min={min(five)} max={max(five)} sum={sum(five)}')

six = [i for i in range(1,21,2)]
# for i in six:
#     print(i, end=" ")

seven = [i for i in range(3,30,3)]
# for i in six:
#     print(i, end=" ")

eight = [i for i in range(1, 11)]
# for i in eight:
#     print(i**3, end=" ")

nine = [i**3 for i in range(1, 11)]
# for i in nine:
#     print(i, end=" ")